module PriorityLock (
    input logic clk,
    input logic rst_n,
    input logic [3:0] req,
    output logic [3:0] grant
);

logic [1:0] last_grant;

always_ff @(posedge clk or negedge rst_n) begin
    if (!rst_n)
        last_grant <= 2'd0;
    else
        last_grant <= (last_grant + 1) % 4;
end

always_comb begin
    grant = 4'd0;
    if (req[(last_grant+1)%4])       grant[(last_grant+1)%4] = 1;
    else if (req[(last_grant+2)%4])  grant[(last_grant+2)%4] = 1;
    else if (req[(last_grant+3)%4])  grant[(last_grant+3)%4] = 1;
    else if (req[last_grant])        grant[last_grant] = 1;
end

endmodule
