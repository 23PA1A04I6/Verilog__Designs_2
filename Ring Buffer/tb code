module RingBuffer_tb;

logic clk, rst_n, write_en, read_en;
logic [7:0] din, dout;
logic full, empty;

RingBuffer uut (
    .clk(clk),
    .rst_n(rst_n),
    .write_en(write_en),
    .read_en(read_en),
    .din(din),
    .dout(dout),
    .full(full),
    .empty(empty)
);

initial clk = 0;
always #5 clk = ~clk;

initial begin
    $dumpfile("dump.vcd"); $dumpvars;
    rst_n=0; write_en=0; read_en=0; din=8'h00;
    #12; rst_n=1;
    // write four items
    repeat (4) begin
        write_en=1; din=$random; #10;
    end
    write_en=0;
    // read two items
    repeat (2) begin
        read_en=1; #10;
    end
    read_en=0;
    // write again
    repeat (2) begin
        write_en=1; din=$random; #10;
    end
    write_en=0;
    // read all
    read_en=1; repeat (4) #10;
    read_en=0;
    #10;
    $finish;
end

endmodule
